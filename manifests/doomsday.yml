name: doomsday

instance_groups:
  - name: doomsday
    instances: 1
    azs: [z1]
    jobs:
      - name: doomsday
        release: doomsday
        properties:
          # The list of backends to ingest certificates from. Each entry
          # in the backends list is a hash that looks like one of the following
          backends:
            - type: tlsclient
              # Checks certs of configured URLs by connecting over TCP, attempting a TLS
              #   handshake, and then returning the served certificate
              name: mytlsclient
              properties:
                # (list) A list of URLs to connect to. You should omit the scheme of the URLs
                hosts:
                # (string)
                - starkandwayne.com
                - shieldproject.io
                - genesisproject.io

            # - type: vault
            #   # Hashicorp Vault. https://www.vaultproject.io/
            #   name: myvault
            #   refresh_interval: 30
            #   properties:
            #     # (string) The URL where the Vault API is located
            #     address: https://127.0.0.1:443
            #     # (bool) (default: false) Is Vault listening for TLS but the cert isn't
            #     # trusted? Make this true. Otherwise leave it false.
            #     insecure_skip_verify: true
            #     # (string) This is the path to begin looking for Vault secrets. Everything under this
            #     # path will be searched. Defaults to "secret/" if not present.
            #     base_path: "secret/"
            #     # (hash) Options for authorizing to Vault
            #     auth:
            #       # (string) A Vault authentication token.
            #       token: 01234567-89ab-cdef-0123-456789abcdef

            # - type: opsmgr
            #   # Pivotal Ops Manager. https://network.pivotal.io/products/ops-manager
            #   name: myopsmanager
            #   properties:
            #     # (string) The URL of the Ops Manager API location.
            #     address: https://127.0.0.1:443
            #     # (bool) (default: false) Is the Ops Manager API cert not trusted? Make
            #     # this true. Otherwise leave it false.
            #     insecure_skip_verify: false
            #     # (hash) Options for authorizing to the UAA attached to your Ops Manager
            #     auth:
            #       # (string) The grant type with which you are going to authenticate to the UAA
            #       # One of "password" or "client_credentials". If it's "client_credentials",
            #       # provide "client_id" and "client_secret". If it's "password", then provide
            #       # "client_id", "client_secret", "username", and "password"
            #       grant_type: password
            #       # (string) The id of the OAuth client
            #       client_id: opsman
            #       # (string) The secret of the OAuth client
            #       client_secret: ""
            #       # (string) The username of the user to use (if doing password grant type)
            #       username: admin
            #       # (string) The password of the user to use (if doing password grant type)
            #       password: password

            # - type: credhub
            #   # Pivotal Credhub. https://github.com/cloudfoundry-incubator/credhub
            #   # An implementation of the BOSH Config Server API.
            #   name: mycredhub
            #   properties:
            #     # (string) The URL where the Credhub API is located
            #     address: https://127.0.0.1:8844
            #     # (bool) (default: false) Is the Credhub API cert not trusted? Make
            #     # this true. Otherwise leave it false.
            #     insecure_skip_verify: false
            #     # (hash) Options for authorizing to the UAA attached to your Credhub.
            #     # This is the same as the Ops Manager auth options. Check that out.
            #     auth:
            #       grant_type: password
            #       client_id: credhub_cli
            #       client_secret: ""
            #       username: credhub-cli
            #       password: password

          server:
            # (number) (default: 8111)
            port: 80
            # If present, this has Doomsday's API listen with TLS.
            # tls:
            #   # (string) An x509 certificate to serve from the API
            #   cert: |
            #     -----BEGIN CERTIFICATE-----
            #     ...
            #     -----END CERTIFICATE-----
            #   # (string) The RSA key used to sign `cert`
            #   key: |
            #     -----BEGIN RSA PRIVATE KEY-----
            #     ...
            #     -----END RSA PRIVATE KEY-----
            auth:
              type: none
              # type: userpass
              # properties:
              #   # (string) The username to accept logins for
              #   username: admin
              #   # (string) The password to accept logins for
              #   password: password
              #   # (number) How many minutes a session token lasts before it is invalid.
              #   timeout: 30
              #   # (bool) If true, a session token has its validity length refreshed to
              #   # the configured timeout when it is used, so long as it is used while
              #   # still valid.
              #   refresh: true

          notifications:
            # (string) The external URL for this doomsday server. It will be
            # included in notification messages
            doomsday_url: http://doomsday.bosh.release

            # (hash) A notification backend is something that receives notifications
            backend:
              # (string, enum) The type of notification backend.
              # Acceptable values are slack or shout.
              # Slack is... well.. Slack (slack.com)
              # Shout is github.com/jhunt/shout, a man-in-the-middle notification handler
              # Notifications through incoming webhooks to Slack.
              type: slack
              properties:
               # (string) The incoming webhook to send the notifications to
               webhook: https://hooks.slack.com/services/ABCDEF1234/ABCDEF1234/ABCDEF1234
               # (bool) Whether to send notifications when there are no certs expiring soon
               notify_ok: false

              # type: shout
              # # (hash) backend-type specific notification options
              # properties:
              #   # (string) The url of the shout server
              #   url: "http://localhost:7109"
              #   # (string) The username to authenticate to the shout server with
              #   username: admin
              #   # (string) The password to authenticate to the shout server with
              #   password: password
              #   # (string) The topic to notify for (this is an identifier for this doomsday server in shout)
              #   topic: doomsday

            # A schedule for when to check/send notifications
            schedule:
              # The type of notification schedule.
              # Acceptable values are constant and cron
              # constant is effectively "every x minutes"
              # cron is based on cron schedules, allowing for more complex notification intervals
              type: constant
              # schedule-type-specific properties
              properties:
                # (number) The number of minutes to wait between notifications
                interval: 30
              # type: cron
              # properties:
              #  # A crontab spec, in the form of minute, hour, day of month, month, and day of week
              #  spec: "* 12 * * *"

    networks:
      - name: default
    stemcell: default
    vm_type: default

update:
  canaries: 1
  canary_watch_time: 30000-600000
  max_in_flight: 1
  serial: true
  update_watch_time: 30000-600000

stemcells:
  - alias: default
    os: ubuntu-xenial
    version: latest

releases:
- name: doomsday
  sha1: bd066be11570de9689dd47519352dcde20cb8982
  url: https://github.com/doomsday-project/doomsday-boshrelease/releases/download/v0.9.0/doomsday-0.9.0.tgz
  version: 0.9.0
